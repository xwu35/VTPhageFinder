from scripts.common import parse_samples_and_sequences

configfile: os.path.join(workflow.basedir, "..", "config", "config.yaml")

# path to metadata
METADATA = config["sample_info"]

# directory to raw reads
READDIR = config["reads_dir"]

# directory to save the results
RESULTS_DIR = config["results_dir"]

# get sample names and sequences path
SAMPLE, R1_MAP, R2_MAP = parse_samples_and_sequences(METADATA, READDIR)

# rules
include: "rules/setup.smk"
include: "rules/preprocessing.smk"
include: "rules/assembly.smk"
include: "rules/check_contig_contamination.smk"

# funtion to define requested inputs for the rule all
def get_all_input(wildcards):
    wanted_input = []

    if config["step"] == "fastqc":
        wanted_input = fastqc_input

    if config["step"] == "preprocess":
        # get raw reads fastqc input
        wanted_input += fastqc_input
        # get clean reads input
        wanted_input += clean_reads_input
      
    if config["step"] == "assemble":
        # get raw reads fastqc input
        wanted_input += fastqc_input
        # get clean reads input
        wanted_input += clean_reads_input
        # get assembly input
        wanted_input += assembly_input

    return wanted_input

# master target rule
rule all:
    input: get_all_input
